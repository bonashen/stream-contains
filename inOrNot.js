// Generated by CoffeeScript 1.9.3
var inOrNotIn, readArray, through;

through = require('./util').through;

readArray = require('./util').readArray;

inOrNotIn = function(notIn) {
  return function(arr, distinct) {
    var analyse, endCount, left, map, queue, right, wait;
    right = arr instanceof Array ? readArray(arr) : arr;
    distinct = (function(distinct) {
      if ('function' === typeof distinct) {
        return distinct;
      } else {
        return function(obj) {
          if ('object' === typeof obj) {
            return obj[distinct];
          } else {
            return obj;
          }
        };
      }
    })(distinct);
    map = {};
    queue = [];
    endCount = 0;
    analyse = function() {
      var doc;
      doc = queue.shift();
      if (doc) {
        if (notIn ^ (map[distinct(doc)] !== void 0)) {
          left.emit('data', doc);
        }
        process.nextTick(analyse);
      } else {
        left.emit('end');
        queue = map = void 0;
      }
    };
    wait = function() {
      endCount++;
      if (endCount === 2) {
        process.nextTick(analyse);
      }
    };
    left = through(queue.push.bind(queue), wait);
    right.on('data', function(doc) {
      map[distinct(doc)] = doc;
    }).once('end', wait);
    return left;
  };
};

module.exports["in"] = inOrNotIn(false);

module.exports.notIn = inOrNotIn(true);

//# sourceMappingURL=inOrNot.js.map
